name: .NET Core

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: windows-latest #ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    
    # publish nuget packages -- start
    #- name: Pack Packages
    #  run: dotnet pack ./AnimalAdoption.Common.Logic/AnimalAdoption.Common.Logic.csproj --configuration Release --no-build --output alan9259.taa-portal\nupkgs\Release
    
    #- name: Setup Nuget.exe
    #  uses: warrenbuckley/Setup-Nuget@v1
      
   # - name: Nuget Add Source
    #  run: nuget source Add -Name "GitHub" -Source "https://nuget.pkg.github.com/alan9259/index.json" -UserName alan9259 -Password ${{ secrets.NUGET }}

   # - name: Nuget SetAPIKey
    #  run: nuget setApiKey ${{ secrets.NUGET }} -Source "GitHub"

    #- name: Nuget Push
    #  run: nuget push alan9259.taa-portal\nupkgs\Release\*.nupkg -Source "GitHub" -SkipDuplicate
    # publish nuget packages -- end
      
    - name: Test
      run: dotnet test ./AnimalAdoption.Web.Portal.UnitTests/AnimalAdoption.Web.Portal.UnitTests.csproj --no-restore --verbosity normal
    - name: List out directory contents
      run: echo "Listing the contents of the GitHub workspace directory" ls ${{ github.workspace }} echo "Recursively listing all contents of the current directory" ls -R
  
    - name: Publish
      run: dotnet publish ./AnimalAdoption.Web.Portal/AnimalAdoption.Web.Portal.csproj --configuration Release --no-build --output ${{ github.workspace }}/taa-portal/
    - uses: actions/upload-artifact@v2
      with:
        name: TAA-Animal-Portal-Artifact
        path: ${{ github.workspace }}/taa-portal
 
  deploy:
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2

    - uses: actions/download-artifact@v2
      id: download
      with:
        name: 'TAA-Animal-Portal-Artifact'
        path: ${{ github.workspace }}/taa-portal
    - name: 'Run Azure webapp deploy action using publish profile credentials'
      uses: azure/webapps-deploy@v2
      with: 
        app-name: Lemon-Treats-TAA-Animal-Portal # Replace with your app name
        publish-profile: ${{ secrets.DEPLOYMENT_SECREST_DEV  }} # Define secret variable in repository settings as per action documentation
        package: '${{ github.workspace }}/taa-portal'
        
    - uses: azure/login@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'

    # app settings from github secret
    # - uses: azure/appservice-settings@v1
    #   with:
    #     app-name: 'Lemon-Treats-TAA-Animal-Portal'
    #     #slot-name: 'staging'  # Optional and needed only if the settings have to be configured on the specific deployment slot
    #     app-settings-json: '${{ secrets.APP_SETTINGS }}' 
    #     #connection-strings-json: '${{ secrets.CONNECTION_STRINGS }}'
    #     general-settings-json: '{"alwaysOn": "false", "webSocketsEnabled": "true"}' #'General configuration settings as Key Value pairs'
    #   id: settings

    # app settings from azure key vault
    - uses: Azure/get-keyvault-secrets@v1.0
      with:
        keyvault: "taa-key-vault"
        secrets: 'SimulatedFailureChance, GlobalPassword'
      id: myGetSecretAction
    - uses: azure/appservice-settings@v1
      with:
        app-name: 'Lemon-Treats-TAA-Animal-Portal'
        #slot-name: 'staging'  # Optional and needed only if the settings have to be configured on the specific deployment slot
        app-settings-json: '[{ "name": "GlobalPassword","value": "${{ steps.myGetSecretAction.outputs.GlobalPassword }}","slotSetting": false},{"name": "SimulatedFailureChance","value": "${{ steps.myGetSecretAction.outputs.SimulatedFailureChance }}","slotSetting": false}]'
        #connection-strings-json: '${{ secrets.CONNECTION_STRINGS }}'
        general-settings-json: '{"alwaysOn": "false", "webSocketsEnabled": "true"}' #'General configuration settings as Key Value pairs'
      id: settings

  
  arm-deploy:
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    
    runs-on: ubuntu-latest
    steps:
    
    - uses: actions/checkout@master
    - name: Deploy resources to the Test Resource Group using an ARM template
      
      uses: whiteducksoftware/azure-arm-action@v3.2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS_PROD }}
        resourceGroupName: ${{ env.PROD_RESOURCE_GROUP_NAME }}
        templateLocation: ${{ github.workspace }}/ARM.json
        deploymentName: taa-prod-deploy
        deploymentMode: Incremental
        overrideParameters: |
          resourceLocation=${{ env.DEPLOY_LOCATION }}
          tenantGuid=${{ secrets.AG_TENANT_GUID }}
          appServicePlanName=${{ env.PROD_APP_SERVICE_PLAN_NAME }}
          keyVaultName=${{ env.PROD_KEY_VAULT_NAME }}
          webAppName=${{ env.PROD_WEB_APP_NAME }}
          resourceGroupServicePrincipalManagedApplicationObjectId=${{ secrets.TAA_SP_MANAGED_APP_OBJECT_ID }}
        env: |
          PROD_RESOURCE_GROUP_NAME: GitHubDevOps-2020-09-03-team-01-prod
          DEPLOY_LOCATION: australiaeast
          AG_TENANT_GUID: ab5eb3d0-6067-40ee-b4c0-a2ce05dbf039
          PROD_APP_SERVICE_PLAN_NAME: ASP-GitHubDevOps20200903team01dev-98cb
          PROD_KEY_VAULT_NAME: taa-key-vault
          PROD_WEB_APP_NAME: Lemon-Treats-TAA-Animal-Portal-Prod

